plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

//1、取出isComponent字段
def isComponent = rootProject.ext.isComponent

def appId = rootProject.ext.appId
def application = rootProject.ext.application
def dependenciesImport = rootProject.ext.dependenciesImport
def dependenciesKapt = rootProject.ext.dependenciesKapt



android {
    compileSdkVersion application.compileSdkVersion
    buildToolsVersion application.buildToolsVersion

    defaultConfig {
        applicationId appId.app
        minSdkVersion application.minSdkVersion
        targetSdkVersion application.targetSdkVersion
        versionCode 100
        versionName "1.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        //将当前构建环境状态写入 BuildConfig 文件中
        buildConfigField("boolean", "isComponent", String.valueOf(isComponent))

        //kotlin路由APT 传参
        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.getName())
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(":lib_comm")

    dependenciesImport.each { k, v -> implementation(v) }
    dependenciesKapt.each { k, v -> kapt(v) }

    //2、当前是发布环境，那么需要引入其它子模块的Library
    if (!isComponent) {
        implementation project(path: ':module_user')
    }


}